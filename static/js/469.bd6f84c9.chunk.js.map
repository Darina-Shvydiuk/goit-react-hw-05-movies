{"version":3,"file":"static/js/469.bd6f84c9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_item\":\"MovieItem_movie_item__axwNd\",\"movie_item_image\":\"MovieItem_movie_item_image__ppz3o\",\"link\":\"MovieItem_link__mit6j\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from '../MovieItem/MovieItem.module.css';\n\nexport const MovieItem = ({ id, original_title, poster_path }) => {\n  const location = useLocation();\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }} className={s.link}>\n      <li className={s.movie_item}>\n        <img\n          className={s.movie_item_image}\n          width=\"280\"\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n        />\n        <p>{original_title}</p>\n      </li>\n    </Link>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  original_title: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"MovieList_movie_list__IWl2j\",\"error\":\"MovieList_error__vObdl\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem';\nimport { Loader } from 'components/Loader';\nimport s from '../MovieList/MovieList.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const MovieList = ({ movies = [], status = Status.IDLE }) => {\n  return (\n    <>\n      {status === Status.RESOLVED && (\n        <ul className={s.movie_list}>\n          {movies.map(({ id, original_title, poster_path }) => (\n            <MovieItem\n              key={id}\n              id={id}\n              original_title={original_title}\n              poster_path={poster_path}\n            />\n          ))}\n        </ul>\n      )}\n      {status === Status.PENDING && <Loader />};\n      {status === Status.REJECTED && (\n        <p className={s.error}>Something went wrong....</p>\n      )}\n    </>\n  );\n};\nMovieList.propTypes = {\n  status: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from '../HomePage/HomePage.module.css';\n\nimport { getTrending } from '../../services/API';\nimport { MovieList } from 'components/MovieList';\nimport { Loader } from 'components/Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    (async () => {\n      setStatus(Status.PENDING);\n      try {\n        const { data } = await getTrending();\n\n        if (!data.results.length) {\n          setStatus(Status.REJECTED);\n          setMovies([]);\n          return toast.info('Are you probably wrong? Try again.');\n        } else {\n          setStatus(Status.RESOLVED);\n          setMovies(data.results);\n        }\n      } catch {\n        setStatus(Status.REJECTED);\n      }\n    })();\n  }, []);\n\n  if (!movies && status === Status.IDLE) {\n    return <></>;\n  }\n\n  if (!movies && status === Status.PENDING) {\n    return <Loader />;\n  }\n  if (!movies && status === Status.REJECTED) {\n    return toast.warn('Error');\n  }\n  if (movies && status === Status.RESOLVED) {\n    return (\n      <>\n        <h1 className={s.title}>Trendings Movies</h1>\n        {movies.length > 0 && <MovieList movies={movies} status={status} />}\n\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n};\n","import axios from 'axios';\n\nconst API_KEY = 'de1e46ab66709ff0c0d7eb27054e4e8b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieСredits = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["MovieItem","id","original_title","poster_path","location","useLocation","to","state","from","className","s","width","src","alt","Status","MovieList","movies","status","map","Loader","HomePage","useState","setMovies","setStatus","useEffect","getTrending","data","results","length","toast","autoClose","API_KEY","BASE_URL","axios","console","log","getSearchMovies","query","getMovieDetails","movieId","getMovieСredits","getMovieReviews"],"sourceRoot":""}