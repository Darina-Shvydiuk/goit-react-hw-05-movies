{"version":3,"file":"static/js/669.e3050dbb.chunk.js","mappings":"+QAEMA,EAAU,mCACVC,EAAW,gCAEJC,EAAW,mCAAG,+GAELC,IAAAA,IAAA,UACbF,EADa,qCACwBD,IAHnB,cAEjBI,EAFiB,gBAKJD,IAAAA,IAAUC,GALN,cAKjBC,EALiB,yBAMhBA,GANgB,kCAQvBC,QAAQC,IAAR,MARuB,0DAAH,qD,oBCJxB,GAAiB,E,SCIJC,EAAY,SAACC,EAAIC,EAAgBC,GAC5C,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,UACE,gBAAIK,UAAWC,EAAAA,WAAf,WACE,gBACED,UAAWC,EAAAA,iBACXC,MAAM,MACNC,IAAG,yCAAoCT,GACvCU,IAAKX,KAEP,uBAAIA,QAIX,E,UCpBD,GAAiB,ECKXY,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGCC,EAAY,SAAC,GAA2C,IAAD,IAAxCC,OAAAA,OAAwC,MAA/B,GAA+B,MAA3BC,OAAAA,OAA2B,MAAlBH,EAAkB,EAClE,OACE,gCACGG,IAAWH,IACV,eAAIL,UAAWC,EAAAA,WAAf,SACGM,EAAOE,KAAI,gBAAGjB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACV,SAACH,EAAD,CAEEC,GAAIA,EACJC,eAAgBA,EAChBC,YAAaA,GAHRF,EAFG,MAUfgB,IAAWH,IAAkB,SAACK,EAAA,EAAD,IAbhC,IAcGF,IAAWH,IACV,cAAGL,UAAWC,EAAAA,MAAd,wCAIP,EC1BKI,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGCM,EAAW,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeM,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASP,GAArC,eAAOG,EAAP,KAAeM,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6FACCD,EAAUT,GADX,kBAG0BpB,IAH1B,oBAGWG,EAHX,EAGWA,MACE4B,QAAQC,OAJrB,wBAKKH,EAAUT,GACVQ,EAAU,IANf,kBAOYK,EAAAA,GAAAA,KAAW,uCAPvB,QASKJ,EAAUT,GACVQ,EAAUzB,EAAK4B,SAVpB,0DAaGF,EAAUT,GAbb,yDAAD,EAgBD,GAAE,KAGD,iCACE,6CACCE,EAAOU,OAAS,IAAK,SAACX,EAAD,CAAWC,OAAQA,EAAQC,OAAQA,KAEzD,SAAC,KAAD,CAAgBW,UAAW,QAGhC,C","sources":["services/API.js","components/MovieItem/MovieItem.module.css","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'de1e46ab66709ff0c0d7eb27054e4e8b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  try {\n    const URL = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = await axios.get(URL);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const URL = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    const data = await axios.get(URL);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const URL = await axios.get(\n      `${BASE_URL}/search/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await axios.get(URL);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieÐ¡redits = async movieId => {\n  try {\n    const URL = await axios.get(\n      `${BASE_URL}/search/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const data = await axios.get(URL);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const URL = await axios.get(\n      `${BASE_URL}/search/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    const data = await axios.get(URL);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport s from '../MovieItem/MovieItem.module.css';\n\nexport const MovieItem = (id, original_title, poster_path) => {\n  const location = useLocation();\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <li className={s.movie_item}>\n        <img\n          className={s.movie_item_image}\n          width=\"280\"\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n        />\n        <p>{original_title}</p>\n      </li>\n    </Link>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  original_title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieItem } from 'components/MovieItem';\nimport { Loader } from 'components/Loader';\nimport s from '../MovieList/MovieList.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const MovieList = ({ movies = [], status = Status.IDLE }) => {\n  return (\n    <>\n      {status === Status.RESOLVED && (\n        <ul className={s.movie_list}>\n          {movies.map(({ id, original_title, poster_path }) => (\n            <MovieItem\n              key={id}\n              id={id}\n              original_title={original_title}\n              poster_path={poster_path}\n            />\n          ))}\n        </ul>\n      )}\n      {status === Status.PENDING && <Loader />};\n      {status === Status.REJECTED && (\n        <p className={s.error}>Something went wrong....</p>\n      )}\n    </>\n  );\n};\nMovieList.propTypes = {\n  status: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getTrending } from '../../services/API';\nimport { MovieList } from 'components/MovieList';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    (async () => {\n      setStatus(Status.PENDING);\n      try {\n        const { data } = await getTrending();\n        if (!data.results.length) {\n          setStatus(Status.REJECTED);\n          setMovies([]);\n          return toast.info('Are you probably wrong? Try again.');\n        } else {\n          setStatus(Status.RESOLVED);\n          setMovies(data.results);\n        }\n      } catch {\n        setStatus(Status.REJECTED);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <h1>Trendings Movies</h1>\n      {movies.length > 0 && <MovieList movies={movies} status={status} />}\n\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};\n"],"names":["API_KEY","BASE_URL","getTrending","axios","URL","data","console","log","MovieItem","id","original_title","poster_path","location","useLocation","to","state","from","className","s","width","src","alt","Status","MovieList","movies","status","map","Loader","HomePage","useState","setMovies","setStatus","useEffect","results","length","toast","autoClose"],"sourceRoot":""}